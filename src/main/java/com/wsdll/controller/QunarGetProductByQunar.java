package com.wsdll.controller;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpServletRequest;

/**
 * 模拟去哪儿网接受请求获取产品信息
 * @author: WH
 * @create: 2018-10-26 11:07
 **/
@RestController
@RequestMapping(value = "/qunaer")
public class QunarGetProductByQunar {

    @RequestMapping(value = "/entry")
    public String entry(HttpServletRequest request) {
        System.out.println(request.getParameter("method"));
        System.out.println(request.getParameter("requestParam"));

        String str = "{\"data\":\"\",\"securityType\":\"MD5\",\"signed\":\"239CEB3FE7ADF18BC876F4C5D3F80EBA\"}";
        System.out.println(str);
        return str;
    }
}
